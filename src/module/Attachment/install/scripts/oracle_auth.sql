-----------------------------------------------------------------------------
--  DATABASE SCHEMA
--
--  TABLE DPM_MIME_TYPE
--  Mime type's table
--
--  TABLE DPM_ARCHETYPE
--  Archetypes's table
--
--  TABLE DPM_ATTACHMENT_TYPE
--  Archetypes type's table
--
--  TABLE DPM_ATTACHMENT_MIME_TYPE
--  Relationship between mime types and attachment types
--
--  TABLE DPM_ATTACHMENT
--  Attachment's table
--
-----------------------------------------------------------------------------

-- TABLE DPM_MIME_TYPE
CREATE TABLE DPM_MIME_TYPE
(
    MIME_ID                 NUMBER(*,0)             NOT NULL ENABLE,
    MIME_TYPE               VARCHAR2(70 CHAR)       NOT NULL ENABLE,
    DESCRIPTION             VARCHAR2(150 CHAR)      NOT NULL ENABLE,
    EXTENSIONS              VARCHAR2(30 CHAR)       NOT NULL ENABLE
);
COMMENT ON TABLE DPM_MIME_TYPE                          IS 'Table of MIME types';

COMMENT ON COLUMN DPM_MIME_TYPE.MIME_ID                 IS 'Unique id for the mime type';
COMMENT ON COLUMN DPM_MIME_TYPE.MIME_TYPE               IS 'Mime type';
COMMENT ON COLUMN DPM_MIME_TYPE.DESCRIPTION             IS 'Description for the mime type';
COMMENT ON COLUMN DPM_MIME_TYPE.EXTENSIONS              IS 'Valid extensions for the mime type';

ALTER TABLE DPM_MIME_TYPE ADD CONSTRAINT DPM_MIME_TYPE_PK PRIMARY KEY ( MIME_ID );

-- TABLE DPM_ARCHETYPE
CREATE TABLE DPM_ARCHETYPE
(
    ARCHETYPE_ID            NUMBER(*,0)             NOT NULL ENABLE,
    DESCRIPTION             VARCHAR2(100 CHAR)      NOT NULL ENABLE
);
COMMENT ON TABLE DPM_ARCHETYPE                             IS 'Table of archetypes';

COMMENT ON COLUMN DPM_ARCHETYPE.ARCHETYPE_ID               IS 'Unique id for the archetype';
COMMENT ON COLUMN DPM_ARCHETYPE.DESCRIPTION                IS 'Description for the archetype';

ALTER TABLE DPM_ARCHETYPE ADD CONSTRAINT DPM_ARQ_PK PRIMARY KEY ( ARCHETYPE_ID );

-- TABLE DPM_ATTACHMENT_TYPE
CREATE TABLE DPM_ATTACHMENT_TYPE
(
    ATTACHMENT_TYPE         NUMBER(*,0)             NOT NULL ENABLE,
    ARCHETYPE_ID            NUMBER(*,0)             NOT NULL ENABLE,
    DESCRIPTION             VARCHAR2(100 CHAR)      NOT NULL ENABLE,
    STATE                   CHAR(1)                 NOT NULL ENABLE,
    REQUIRED                CHAR(1)                 NOT NULL ENABLE,
    RECORD_DATE             TIMESTAMP               NOT NULL
);
COMMENT ON TABLE DPM_ATTACHMENT_TYPE                             IS 'Table of attachment types for archetypes';

COMMENT ON COLUMN DPM_ATTACHMENT_TYPE.ATTACHMENT_TYPE            IS 'Unique id for the attachment type';
COMMENT ON COLUMN DPM_ATTACHMENT_TYPE.ARCHETYPE_ID               IS 'Unique id for the archetype';
COMMENT ON COLUMN DPM_ATTACHMENT_TYPE.DESCRIPTION                IS 'Description for the attachment type';
COMMENT ON COLUMN DPM_ATTACHMENT_TYPE.STATE                      IS 'Attachement state (A: Active, I: Inactive)';
COMMENT ON COLUMN DPM_ATTACHMENT_TYPE.REQUIRED                   IS 'Define if it is required (Y: Yes, N: No)';
COMMENT ON COLUMN DPM_ATTACHMENT_TYPE.RECORD_DATE                IS 'Record date'

ALTER TABLE DPM_ATTACHMENT_TYPE ADD CONSTRAINT DPM_ATTACH_TYPE_PK PRIMARY KEY ( ATTACHMENT_TYPE );

ALTER TABLE DPM_ATTACHMENT_TYPE ADD CONSTRAINT DPM_ATTACH_TYPE_ARCHETYPE_ID
FOREIGN KEY ( ARCHETYPE_ID ) REFERENCES DPM_ARCHETYPE ( ARCHETYPE_ID );

ALTER TABLE DPM_ATTACHMENT_TYPE ADD CONSTRAINT DPM_ATTACH_TYPE_STATE_CK
CHECK ( STATE IN ('A', 'I') );

ALTER TABLE DPM_ATTACHMENT_TYPE ADD CONSTRAINT DPM_ATTACH_TYPE_REQURIDO_CK
CHECK ( REQUIRED IN ('Y', 'N') );

CREATE OR REPLACE TRIGGER TR_DPM_ATTACH_TYPE_REC_DATE
BEFORE INSERT ON DPM_ATTACHMENT_TYPE
FOR EACH ROW ENABLE
BEGIN
    SELECT SYSDATE INTO :NEW.RECORD_DATE FROM DUAL;
END;
/

-- TABLE DPM_ATTACHMENT_MIME_TYPE
CREATE TABLE DPM_ATTACHMENT_MIME_TYPE
(
    ATTACHMENT_TYPE        NUMBER(*,0)             NOT NULL ENABLE,
    MIME_ID                NUMBER(*,0)             NOT NULL ENABLE,
    STATE                  CHAR(1)                 NOT NULL ENABLE,
    RECORD_DATE            TIMESTAMP               NOT NULL
);
COMMENT ON TABLE DPM_ATTACHMENT_MIME_TYPE                          IS 'Table of mime types for attachment types';

COMMENT ON COLUMN DPM_ATTACHMENT_MIME_TYPE.ATTACHMENT_TYPE         IS 'Unique id for the attachment type';
COMMENT ON COLUMN DPM_ATTACHMENT_MIME_TYPE.MIME_ID                 IS 'Unique id for the mime type';
COMMENT ON COLUMN DPM_ATTACHMENT_MIME_TYPE.STATE                   IS 'State of assignment (A: Active, I: Inactive)';
COMMENT ON COLUMN DPM_ATTACHMENT_MIME_TYPE.RECORD_DATE             IS 'Record date'

ALTER TABLE DPM_ATTACHMENT_MIME_TYPE ADD CONSTRAINT DPM_ATTMT_PK PRIMARY KEY ( ATTACHMENT_TYPE, MIME_ID );

ALTER TABLE DPM_ATTACHMENT_MIME_TYPE ADD CONSTRAINT DPM_ATTMT_ATTACHMENT_TYPE
FOREIGN KEY ( ATTACHMENT_TYPE ) REFERENCES DPM_ATTACHMENT_TYPE ( ATTACHMENT_TYPE );

ALTER TABLE DPM_ATTACHMENT_MIME_TYPE ADD CONSTRAINT DPM_ATTMT_MIME_ID
FOREIGN KEY ( MIME_ID ) REFERENCES DPM_MIME_TYPE ( MIME_ID );

ALTER TABLE DPM_ATTACHMENT_MIME_TYPE ADD CONSTRAINT DPM_ATTMT_STATE_CK
CHECK ( STATE IN ('A', 'I') );

CREATE OR REPLACE TRIGGER TR_DPM_ATTMT_REC_DATE
BEFORE INSERT ON DPM_ATTACHMENT_MIME_TYPE
FOR EACH ROW ENABLE
BEGIN
    SELECT SYSDATE INTO :NEW.RECORD_DATE FROM DUAL;
END;
/

-- TABLE DPM_ATTACHMENT
CREATE TABLE DPM_ATTACHMENT
(
    ATTACHMENT_TYPE        NUMBER(*,0)             NOT NULL ENABLE,
    SEQUENTIAL             NUMBER(*,0)             NOT NULL ENABLE,
    ATTACHMENT_NAME        VARCHAR2(100 CHAR)      NOT NULL ENABLE,
    STATE                  CHAR(1)                 NOT NULL,
    ANNUL_DESCRIPTION      VARCHAR2(200 CHAR)      NULL,
    RECORD_DATE            TIMESTAMP               NOT NULL
);
COMMENT ON TABLE DPM_ATTACHMENT                            IS 'Table of attachments';

COMMENT ON COLUMN DPM_ATTACHMENT.ATTACHMENT_TYPE           IS 'Unique id for the attachment type';
COMMENT ON COLUMN DPM_ATTACHMENT.SEQUENTIAL                IS 'Sequential for the attachment type';
COMMENT ON COLUMN DPM_ATTACHMENT.ATTACHMENT_NAME           IS 'Attachment name';
COMMENT ON COLUMN DPM_ATTACHMENT.STATE                     IS 'Attachment state (A: Active, I: Inactive)';
COMMENT ON COLUMN DPM_ATTACHMENT.ANNUL_DESCRIPTION         IS 'Annul description';
COMMENT ON COLUMN DPM_ATTACHMENT.RECORD_DATE               IS 'Record date';

ALTER TABLE DPM_ATTACHMENT ADD CONSTRAINT DPM_ATTACH_PK PRIMARY KEY ( ATTACHMENT_TYPE, SEQUENTIAL );

ALTER TABLE DPM_ATTACHMENT ADD CONSTRAINT DPM_ATTACH_ATTACHMENT_TYPE
FOREIGN KEY ( ATTACHMENT_TYPE ) REFERENCES DPM_ATTACHMENT_TYPE ( ATTACHMENT_TYPE );

ALTER TABLE DPM_ATTACHMENT ADD CONSTRAINT DPM_ATTACH_ARCHETYPE_ID
FOREIGN KEY ( ARCHETYPE_ID ) REFERENCES DPM_ARCHETYPE ( ARCHETYPE_ID );

ALTER TABLE DPM_ATTACHMENT ADD CONSTRAINT DPM_ATTACH_STATE_CK
CHECK (STATE IN ('A', 'I'));

CREATE OR REPLACE TRIGGER TR_DPM_ATTACH_REC_DATE
BEFORE INSERT ON DPM_ATTACHMENT
FOR EACH ROW ENABLE
BEGIN
    SELECT SYSDATE INTO :NEW.RECORD_DATE FROM DUAL;
END;
/
